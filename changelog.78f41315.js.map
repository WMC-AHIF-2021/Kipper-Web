{"mappings":"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","sources":["build/js/search.ts","build/js/search-index.ts"],"sourcesContent":["import { PageIndex, searchIndex } from \"./search-index\";\nimport { isDocsFile } from \"./main\";\n\nexport function capitalizeFirstLetter(string: string): string {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function setSearchVisibility(visible: boolean): void {\n\tdocument.getElementById(\"search-result\").style.visibility = visible ? \"visible\" : \"hidden\";\n\tdocument.getElementById(\"search-result-overlay\").style.visibility = visible ? \"visible\" : \"hidden\";\n\tdocument.getElementById(\"search-background-overlay\").style.visibility = visible ? \"visible\" : \"hidden\";\n}\n\nexport async function search(): Promise<void> {\n\tconst overlaySearch = <HTMLDivElement>document.getElementById(\"search-result-overlay\");\n\tconst searchResult = <HTMLDivElement>document.getElementById(\"search-result\");\n\tconst searchBarInput = <HTMLInputElement>document.getElementById(\"search-bar-input\");\n\tconst searchBar = <HTMLLIElement>document.getElementById(\"search-bar\");\n\n\t// Initialise basic interface\n\tsetSearchVisibility(true);\n\n\t// Get the search text\n\tconst searchInput = searchBarInput.value.toLowerCase();\n\n\tif (searchInput) {\n\t\tconst pageResults: Array<PageIndex> = (() => {\n\t\t\tconst results: Array<PageIndex> = [];\n\t\t\tfor (const page of searchIndex) {\n\t\t\t\tconst title = page.pageTitle.toLowerCase();\n\t\t\t\tconst description = page.pageDescription.toLowerCase();\n\n\t\t\t\t// If the title or the description includes the string that was searched for, add it to the list\n\t\t\t\tif (title.includes(searchInput) || description.includes(searchInput)) {\n\t\t\t\t\tresults.push(page);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(results);\n\t\t\treturn results;\n\t\t})();\n\n\t\tif (pageResults.length > 0) {\n\t\t\tlet resultsHTML = \"\";\n\t\t\tfor (const result of pageResults) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst link = isDocsFile ? `..${result.uriPath}` : `.${result.uriPath}`;\n\t\t\t\tconst pageDescription = result.pageDescription;\n\t\t\t\tconst pageTitle = capitalizeFirstLetter(result.pageTitle);\n\n\t\t\t\t// Positive Result at Search\n\t\t\t\tconsole.log(\"The Search found: \" + link + \" for your request! (\" + searchInput + \")\");\n\t\t\t\tresultsHTML += `<div><p><a href=\"${link}\">${pageTitle}</a></p><small>${pageDescription}</small></div>`;\n\t\t\t}\n\t\t\tsearchResult.innerHTML = resultsHTML;\n\t\t} else {\n\t\t\t// Negative Result at Search\n\t\t\tsearchResult.innerHTML = \"Sorry, we couldn't find anything for your search!\";\n\t\t}\n\t} else {\n\t\tsearchResult.innerHTML = \"Type to search...\";\n\t}\n\n\t// Set position of the search result box\n\tconst searchBarRect: DOMRect = searchBar.parentElement.getBoundingClientRect();\n\toverlaySearch.style.left = `${searchBarRect.left}px`;\n\toverlaySearch.style.top = `${searchBarRect.top + searchBarRect.height}px`;\n\toverlaySearch.style.width = `${searchBarRect.width}px`;\n}\n\nexport async function loadSearch(): Promise<void> {\n\t// Verify that the index is complete\n\tif (searchIndex === []) {\n\t\tconsole.error(\"Critical Error: Index for the search failed to load! Searching is disabled.\");\n\t\tdocument.getElementById(\"search-bar\").style.visibility = \"hidden\";\n\t} else {\n\t\tconsole.log(\"Index initialised!\");\n\t}\n\n\t// Add event listener\n\tdocument.getElementById(\"search-bar-input\").addEventListener(\"keyup\", search);\n\tdocument.getElementById(\"search-bar-input\").addEventListener(\"focus\", search);\n\tconsole.log(\"Search loaded!\");\n}\n\n// Load search when the DOM finished loading\nwindow.addEventListener(\"DOMContentLoaded\", loadSearch);\n\n// If the user clicks outside the search, remove search\ndocument.addEventListener(\"click\", (e: MouseEvent) => {\n\tif (\n\t\t!document.getElementById(\"search-result-overlay\").contains(<Element>e.target) &&\n\t\t!document.getElementById(\"search-bar\").contains(<Element>e.target)\n\t) {\n\t\tsetSearchVisibility(false);\n\t}\n});\n\ndocument.addEventListener(\"scroll\", () => {\n\tsetSearchVisibility(false);\n});\n","export const rawSearchIndex: Array<string> = [\n\t\"Quickstart;/docs/quickstart.html;Quickstart;The quickstart guide for Kipper.\",\n\t\"Goals & Roadmap;/docs/goals-and-roadmap.html;Goals & Roadmap;Goals & Roadmap for Kipper.\",\n\t\"Supported Platforms;/docs/supported-platforms.html;Supported Platforms;Supported platforms for Kipper.\",\n\t\"Usage Examples;/docs/usage-examples.html;Usage;Usage examples for the Kipper language.\",\n\t\"Variables;/docs/variables.html;Variables;Kipper variables for storing and reusing data.\",\n\t\"Variable Datatypes;/docs/datatypes.html;Variable Datatypes;Variable datatypes in the Kipper language.\",\n\t\"Expressions;/docs/expressions.html;Expressions;Expressions, which can perform various operations and evaluate to a new value.\",\n\t\"Statements;/docs/statements.html;Statements;Kipper Statements, which are standalone units of execution able to perform various tasks.\",\n\t\"If-Statement;/docs/if-statement.html;If-Statement;Decision making using if, else-if and else statements.\",\n\t\"While-Loop;/docs/while-loop.html;While-Loop;While-loop statements, which allow for the repeated execution of code.\",\n\t\"Do-While-Loop;/docs/do-while-loop.html;Do-While-Loop;Do-While-loop statements, which allow for the repeated execution of code.\",\n\t\"For-Loop;/docs/for-loop.html;For-Loop;For-loop statements, which allow for the repeated execution of code.\",\n\t\"Functions;/docs/functions.html;Functions;Kipper Functions, which allow for the repeated execution of code using arguments.\",\n\t\"Built-in Functions;/docs/built-in-functions.html;Built-In Functions;Built-in Kipper Functions, which are available\" +\n\t\t\" in every\" +\n\t\t\" program per default.\",\n\t\"Playground;/playground.html;Playground;Online Playground for using Kipper in your browser.\",\n\t\"Docs;/docs/index.html;Documentation;Kipper Documentation and API Reference.\",\n\t\"Changelog;/changelog.html;Changelog;Detailed Changelog documenting changes in Kipper.\",\n\t\"Downloads;/download.html;Downloads;Downloads.\",\n\t\"Comments;/docs/comments.html;Comments;Comments in the Kipper language.\",\n];\n\n/**\n * The index for a single Kipper docs page.\n */\nexport interface PageIndex {\n\tkeyword: string;\n\turiPath: string;\n\tpageTitle: string;\n\tpageDescription: string;\n}\n\nexport const searchIndex: Array<PageIndex> = rawSearchIndex.map((index) => {\n\tconst lineContent = index.split(\";\");\n\treturn {\n\t\tkeyword: lineContent[0],\n\t\turiPath: lineContent[1],\n\t\tpageTitle: lineContent[2],\n\t\tpageDescription: lineContent[3],\n\t};\n});\n"],"names":[],"version":3,"file":"changelog.78f41315.js.map","sourceRoot":"/"}